/*
 * Create a Folder and the views for a capability 
 * + Create a Viewref toward the Canvas View
 */

debug = true;

console.show();
console.clear();
console.log("> Start");

// Variables
var theConceptVO;
var theConcept;
var theView;
var theFolder;
var theViewDetail;
var theViewUsage;

// la selection doit se faire sur un VO, dans une Vue
theConceptVO = $(selection).filter("capability").first();

// theConceptVO doit être une Capability
if(!theConceptVO ) {
    console.log("!! one capability (VO) must be selected in the current view")
    exit();
}
theView = theConceptVO.view;
if(!theView) {
    console.log("!! one capability (VO) must be selected in the current view")
    exit();
}
debug ? console.log("theConceptVO = " + theConceptVO.bounds) : true;
debug ? console.log("theView = " + theView.name) : true;

// theConcept correspondant à theConceptVO doit être bien classé: dans un folder/folder de "Strategy"
theConcept = theConceptVO.concept;
debug ? console.log("theConcept Parent x 3 = " + $(theConcept).parent().parent().parent()) : true;
if($(theConcept).parent().parent().parent().first().name != "Strategy"){
    console.log("!! theconcept doit être classé dans un sous-sous-repertoire de Strategy");
    exit();
}

// si le Folder n'existe pas déja (dans les Views), alors Création
theFolder = $("folder.Views").find("folder").filter( folder => {
    return folder.name == theConceptVO.name ? true : false;
}).first();
debug ? console.log("theFolder = " + theFolder) : true;

if(theFolder){
    console.log("> The Folder already exists");
}else{
    console.log("> The Folder does not exist");

    // Création du FolderRoot et des 2 views:  ViewDetail et ViewUsage
    theFolder = $("folder.Views").first().createFolder(theConceptVO.name);
    theViewDetail = model.createArchimateView("Default",theFolder);
    theViewDetail.name = "Detail";
    theViewUsage = model.createArchimateView("Default",theFolder);
    theViewUsage.name = "Usage"
    debug ? console.log("theFolder and the 2 views are created") : true;

    // Ajout du viewRef vers "TOC"
    var theTocView = $(".TOC").filter("archimate-diagram-model").first() ;
    var theTocViewRef1 = theViewDetail.createViewReference(theTocView, 10, 10, 70, 25);
    var theTocViewRef2 = theViewUsage.createViewReference(theTocView, 10, 10, 70, 25);
    debug ? console.log("theTocViewRef are created") :  true;

    // Ajout du viewRef vers "Map des Capabilités"
    var theMapView = $(".Map des Capabilités").filter("archimate-diagram-model").first() ;
    if(!theMapView) {
        console.log("!! 'Map des Capabilités'  does not exist")
        exit();
    } else {
        debug ? console.log("theMapView = " + theMapView.name) : true;
    }
    var theMapViewRef1 = theViewDetail.createViewReference(theMapView, 90, 10, 210, 25);
    var theMapViewRef2 = theViewUsage.createViewReference(theMapView, 90, 10, 210, 25);
    debug ? console.log("theMapViewRef are created") :  true;

    // Ajout de la note de Titre avec le "périmètre" pour préfixe et thelabelExpression adhoc
    var theConceptParent = $(theConcept).parent().first();
    var theConceptParent2 = $(theConceptParent).parent().first();
    var theNoteDetail = theViewDetail.createObject("diagram-model-note", 310, 10, 600, 25)
    theNoteDetail.setText( theConceptParent2.name );
    theNoteDetail.fontStyle = "bold";
    theNoteDetail.setLabelExpression("${content} / $vfolder{name} / $view{name}");

    var theNoteUsage = theViewUsage.createObject("diagram-model-note", 310, 10, 600, 25)
    theNoteUsage.setText( theConceptParent2.name );
    theNoteUsage.fontStyle = "bold";
    theNoteUsage.setLabelExpression("${content} / $vfolder{name} / $view{name}");

    debug ? console.log("theNote are created") :  true;

    // création d'un viewRef sur theViewUSage vers theViewDetail
    theViewUsage.createViewReference(theViewDetail, 920, 10, 100, 25);

    // création d'un viewRef sur theViewDetail vers theViewUsage
    theViewDetail.createViewReference(theViewUsage, 920, 10, 100, 25);

    // sur la vue Detail: ajout des groupes de gauche (cf forme Canvas)
    const VGAP = 50;
    const PADDING = 10
    const LSIDE_WIDTH = 800;
    const LSIDE_HEIGHT = 130;
    theGroup1 = theViewDetail.createObject("diagram-model-group", 10, VGAP, LSIDE_WIDTH, LSIDE_HEIGHT);
    theGroup2 = theViewDetail.createObject("diagram-model-group", 10, VGAP +LSIDE_HEIGHT +PADDING, LSIDE_WIDTH, LSIDE_HEIGHT);
    theGroup3 = theViewDetail.createObject("diagram-model-group", 10, VGAP +2*LSIDE_HEIGHT +2*PADDING, LSIDE_WIDTH, LSIDE_HEIGHT);
    theGroup4 = theViewDetail.createObject("diagram-model-group", 10, VGAP +3*LSIDE_HEIGHT +3*PADDING, LSIDE_WIDTH, LSIDE_HEIGHT);

    // ajout des groupes de droite
    const HGAP = 10 + LSIDE_WIDTH + PADDING;
    const RSIDE_WIDTH = (LSIDE_WIDTH / 2) + 70;
    const RSIDE_HEIGHT = 2*LSIDE_HEIGHT+PADDING;
    theGroup5 = theViewDetail.createObject("diagram-model-group", HGAP, VGAP, RSIDE_WIDTH, RSIDE_HEIGHT);
    theGroup6 = theViewDetail.createObject("diagram-model-group", HGAP, VGAP +RSIDE_HEIGHT +PADDING, RSIDE_WIDTH, RSIDE_HEIGHT);

    theGroup1.name = "Business Services & Channels";
    theGroup2.name = "Business Process & Functions";
    theGroup3.name = "Application Services & Interfaces";
    theGroup4.name = "Application Technology & Facilities";
    theGroup5.name = "Business Actors & Roles";
    theGroup6.name = "Information & Data";

    debug ? console.log("theGroups are created") :  true;
}

// Ajout d'un ViewRef sur theConceptVO (si il n'y en a pas déja un)
if($(theConceptVO).children("diagram-model-reference").size()==0){
    console.log("> theConceptVOViewRef has to be created ");

    if(!theViewDetail){
        // si theViewDetail n'est pas défini, c'est qu'il existe déja (TODO refactor ?)
        theViewDetail = $(theFolder).children().filter(c=>{return c.name == "Detail"}).first();
        debug ? console.log("theViewDetail qui existe déja = " + theViewDetail) : true;
        debug ? console.log("theViewDetail qui existe déja (parent) = " + $(theViewDetail).parent().first().name) : true;
    }
    if(!theViewUsage){
        // si theViewUsage n'est pas défini, c'est qu'il existe déja (TODO refactor ?)
        theViewUsage = $(theFolder).children().filter(c=>{return c.name == "Usage"}).first();
        debug ? console.log("theViewUsage qui existe déja = " + theViewUsage) : true;
    }

    // création of theConceptVOViewRef en fonction de theView
    if(theView.name == "Map des Capabilités"){
        // on pointe vers "Detail"
        var theConceptVOViewRef = theConceptVO.createViewReference(theViewDetail, 0, 0, 25, 25); 
    } else {
        // on pointe vers "Usage"
        var theConceptVOViewRef = theConceptVO.createViewReference(theViewUsage, 0, 0, 25, 25); 
    }
}
else{
    console.log("> theConceptVOViewRef already exists");
    debug ? console.log("- " + $(theConceptVO).children("diagram-model-reference").first()) : true;

}
console.log("> End");