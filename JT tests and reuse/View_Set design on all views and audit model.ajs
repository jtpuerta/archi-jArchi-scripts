/*
 * Enable to apply a common visual design on all views of the model
 * + Audit the model to check conformity:
 * - Elements must be classified under 3 forlders (main / thematiques / master name)
 * - Capability must have a View "Usage" under a folder with the same name than the Capability
 * - Application must have a View with the same name than the Application
 *
 *
 */
 
var debug = true;
console.clear();
console.show();

theConceptVOs = $("view").find("element");
theConceptVOs.each( c => {
    c.gradient = GRADIENT.TOP;
    //c.fontSize = 9;
    //c.fontName = "Segoe UI";
});

theViewRefs = $("view").find("diagram-model-reference");
theViewRefs.each( v => {
    v.fontColor = "#0000ff";    // bleu vif
});

theViewRefs = $("view").find("diagram-model-note");
theViewRefs.each( v => {
    v.gradient = GRADIENT.BOTTOM;
});


console.log("\n1: search for non classified concepts");
theConcepts = $("element");
debug ? console.log("Concepts size = " + theConcepts.size()) : true;
theConcepts.each( c => {
    if ($(c).parents().size() < 3 ) console.log("Pb pour " + c.name + " => parents = " + $(c).parents() );
} );

console.log("\n2: search for Capability without a view with same name");
theConcepts = $("capability");
debug ? console.log("Capability size = " + theConcepts.size()) : true;
theViews = $("view");
debug ? console.log("views size = " + theViews.size() ) : true;

theConcepts.each( c => {
    var nb = theViews.filter(v=>{return v.name == c.name}).size();
    if( nb == 0 ) console.log("Pb this Cap has no  view : " + c.name );
    if( nb > 1 ) console.log("Pb this Cap has more than 1  view : " + c.name );
} );

console.log("\n3: search for MAIN Application without a view with same name. Rq: MAIN app have a parent folder with same name");
theConcepts = $("application-component").filter( a => { return $(a).parent().first().name == a.name });
debug ? console.log("MAIN Appli size = " + theConcepts.size()) : true;
theViews = $("view");
debug ? console.log("views size = " + theViews.size() ) : true;

theConcepts.each( c => {
    var nb = theViews.filter(v=>{return v.name == c.name}).size();
    if( nb == 0 ) console.log("Pb this Appli has no view : " + c.name );
    if( nb > 1 ) console.log("Pb this Appli has more than 1 view : " + c.name );
} );



